
automation:

    ####################################################
    #                                                  #
    #                   AUTOMATIONS                    #
    #                                                  #
    ####################################################

  - alias: homeassistant_start
    initial_state: true
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: mqtt.publish
        data:
          topic: cmnd/tasmotas/status
          payload: 8
      - service: browser_mod.close_popup
      - delay:
          seconds: 1
      - service: frontend.reload_themes
      - delay:
          seconds: 10
      - choose:
        - conditions:
            - condition: state
              entity_id: 
                ['media_player.sony_bravia', 'media_player.samsung_tv_remote', 
                'media_player.spotify', 'media_player.google_nest_mini']
              state: 'off'
          sequence:
            - service: input_select.select_option
              data:
                entity_id: input_select.conditional_media
                option: Senast nedladdat
      - delay:
          seconds: 10
      - service: fullykiosk.load_start_url
        data:
          entity_id: media_player.galaxy_tab_a_media_player
      - choose:
        - conditions:
            - condition: state
              entity_id: light.hall
              state: 'off'
          sequence:
            - service: switch.turn_on
              entity_id: switch.galaxy_tab_a_screensaver
      - service: homekit.start

  - alias: lovelace_updated_ignore
    mode: restart
    initial_state: true
    trigger:
      - platform: event
        event_type: lovelace_updated
    action:
      - service: browser_mod.toast
        data:
          duration: 1
          message: ' '

  - alias: restart_homekit
    initial_state: true
    trigger:
      - platform: time
        at: 04:00:00
    action:
      - service: homekit.start

  - alias: clear_log_filesize
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.home_assistant_log
        above: 50
    action:
      - service: shell_command.clear_logs

  - alias: computer_on_update
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.computer_imac
        from: 'off'
        to: 'on'
    action:
      - delay:
          seconds: 10
      - service: homeassistant.update_entity
        entity_id:
          ['sensor.imac_cpu', 'sensor.imac_mem', 'sensor.imac_system_ssd', 'sensor.imac_macintosh_hd', 
          'sensor.imac_time_machine', 'sensor.monitors_volume', 'sensor.imac_uptime']

  - alias: tv_on_lights
    initial_state: true
    trigger:
      - platform: state
        entity_id: media_player.sony_bravia
        from: 'off'
        to: 'on'
    action:
      - service: light.turn_on
        entity_id: light.tvlampa

  - alias: hacs_version_grep
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.hacs
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.hacs_version

  - alias: update_hass_release_notes
    initial_state: true
    trigger:
      - platform: state
        entity_id: ['sensor.hass_version_latest', 'sensor.hass_version_latest_beta']
    action:
      - service: homeassistant.update_entity
        entity_id:
          ['sensor.hass_release_notes', 'sensor.hass_release_notes_rc']

  - alias: no_motion_bathroom
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.motion_badrum
        to: 'off'
        for:
          minutes: 30
    action:
      - service: light.turn_off
        data:
          entity_id: light.badrum

    ####################################################
    #                                                  #
    #                  NOTIFICATIONS                   #
    #                                                  #
    ####################################################

  - alias: toast
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          ['input_boolean.motion_garderob', 'input_boolean.motion_badrum', 
          'binary_sensor.wemo_motion']
        from: 'off'
        to: 'on'
    action:
      - service: browser_mod.toast
        data:
          duration: 8000
          message: >
            Rörelse detekterat i {{ trigger.to_state.name }}
      - service: input_boolean.turn_off
        data:
          entity_id: >
            {{ trigger.entity_id }}

  - alias: macos_notification_motion_hall
    initial_state: false
    trigger:
      - platform: state
        entity_id: input_boolean.motion_hall
        from: 'off'
        to: 'on'
    condition:
      - condition: state
        entity_id: switch.computer_imac
        state: 'on'
    action:
      - service: shell_command.imac_notify_motion_hallway

  - alias: ios_notify_hass_rc
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.hass_version_latest_beta
    condition:
      - condition: state
        entity_id: sensor.hass_dev_release
        state:
          ['Idag', 'Släppt']
    action:
      - service: notify.mobile_app_iphone
        data:
          title: >
            RC {{ states(trigger.entity_id) }} tillgänglig
          message: Tryck för att läsa versionsinformation
          data:
            url: https://rc.home-assistant.io/latest-release-notes/

  - alias: ios_notify_hass_update
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.hass_version
    condition:
      condition: not
      conditions:
        - condition: state
          entity_id: sensor.hass_version
          state:
            ['Senaste', 'unknown']
    action:
      - service: notify.mobile_app_iphone
        data:
          title: >
            {{ states(trigger.entity_id) }} tillgänglig {{ '\U0001F389' }}
          message: Håll in för att uppdatera
          data:
            data:
              url: https://www.home-assistant.io/latest-release-notes/
            push:
              category: ios_hass

  - alias: ios_notify_hass_update_action
    initial_state: true
    trigger:
      - platform: event
        event_type: ios.notification_action_fired
        event_data:
          actionName: START_WATCHTOWER
    action:
      - service: switch.turn_on
        entity_id: switch.watchtower

  - alias: notify_and_remove_completed_torrent
    initial_state: true
    trigger:
      - platform: event
        event_type: transmission_downloaded_torrent
    action:
      - service: notify.mobile_app_iphone
        data:
          title: Torrent nedladdad
          message: >
            {{ trigger.event.data.name }}
      - service: transmission.remove_torrent
        data:
          name: Transmission
          id: >
            {{ trigger.event.data.id | int }}

    ####################################################
    #                                                  #
    #                  SCAN INTERVAL                   #
    #                                                  #
    ####################################################

  - alias: conditional_scan_interval
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: /5
    condition:
      - condition: state
        entity_id: switch.computer_imac
        state: 'on'
    action:
      - service: homeassistant.update_entity
        entity_id:
          ['sensor.imac_ip', 'sensor.imac_system_ssd', 'sensor.imac_macintosh_hd', 
          'sensor.imac_time_machine', 'sensor.imac_mem', 'sensor.monitors_volume', 
          'binary_sensor.monitors_mute_check', 'sensor.imac_uptime', 'sensor.imac_cpu']

  - alias: tasmota_scan_interval
    initial_state: true
    trigger:
      - platform: time_pattern
        minutes: /5
    action:
      - service: mqtt.publish
        data:
          topic: cmnd/tasmotas/status
          payload: 8

    ####################################################
    #                                                  #
    #                     MONITORS                     #
    #                                                  #
    ####################################################

  - alias: monitors_volume_slider
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_number.monitors_volume
    condition:
      - condition: state
        entity_id: switch.computer_imac
        state: 'on'
    action:
      - service: shell_command.monitors_volume_slider
      - service: homeassistant.update_entity
        entity_id: binary_sensor.monitors_mute_check
      - service: homeassistant.update_entity
        entity_id: sensor.monitors_volume

  - alias: monitors_volume_update
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.monitors_volume
    condition:
      - condition: state
        entity_id: switch.computer_imac
        state: 'on'
    action:
      - service: homeassistant.update_entity
        entity_id: binary_sensor.monitors_mute_check
      - service: input_number.set_value
        data:
          entity_id: input_number.monitors_volume
          value: >
            {% set max_volume = 75 %} {% set min_volume = 7 %}
            {% if states(trigger.entity_id) | int > max_volume %}
              {{ max_volume }}
            {% elif states(trigger.entity_id) | int < min_volume %}
              {{ min_volume }}
            {% else %}
              {{ states(trigger.entity_id) }}
            {% endif %}

  - alias: eq_calibration
    mode: queued
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.wemo_monitors
        from: ['on', 'off']
        to: ['on', 'off']
    action:
      - service: shell_command.reference_click
      - delay:
          milliseconds: 100
      - service: shell_command.reference_kill
      - delay:
          milliseconds: 100
      - choose:
        - conditions:
            - condition: state
              entity_id: switch.wemo_monitors
              state: 'on'
          sequence:
            - service: shell_command.reference_monitors
        default:
          - service: shell_command.reference_headphones

  - alias: turn_off_monitors
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.computer_imac
        from: 'on'
        to: 'off'
        for:
          minutes: 5
    action:
      - service: switch.turn_off
        entity_id: switch.wemo_monitors

    ####################################################
    #                                                  #
    #                       FAN 1                      #
    #                                                  #
    ####################################################

  - alias: wemo_fan_turn_off
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.wemo_fan
        from: 'off'
        to: 'on'
        for:
          hours: "{{ states('input_number.wemo_fan_timer') | int }}"
    action:
      - service: switch.turn_off
        entity_id: switch.wemo_fan

    ####################################################
    #                                                  #
    #                       FAN 2                      #
    #                                                  #
    ####################################################

  - alias: sovrum_anslut_turn_off
    initial_state: true
    trigger:
      - platform: state
        entity_id: fan.sovrum_anslut
        from: 'off'
        to: 'on'
        for:
          hours: "{{ states('input_number.sovrum_anslut_timer') | int }}"
    action:
      - service: switch.turn_off
        entity_id: fan.sovrum_anslut

  - alias: sovrum_anslut_turn_on_temp
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.hall_temperature
        above: 24
    condition:
      condition: and
      conditions:
        - condition: time
          after: '20:00:00'
          before: '07:00:00'
        - condition: state
          entity_id:
            ['person.mattias', 'person.sanja']
          state: home
    action:
      - condition: state
        entity_id: fan.sovrum_anslut
        state: 'off'
      - service: fan.turn_on
        entity_id: fan.sovrum_anslut

  - alias: sovrum_anslut_oscillate
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.sovrum_anslut_oscillate
    action:
      - service: remote.send_command
        data:
          entity_id: remote.broadlink
          command: !secret ir_fan_swing

  - alias: sovrum_anslut_speed
    mode: queued
    initial_state: true
    trigger:
      - platform: state
        entity_id: fan.sovrum_anslut
    action:
      - choose:
        - conditions: >
            {{ trigger.from_state.attributes.speed == 'high' and trigger.to_state.attributes.speed == 'medium' or 
            trigger.from_state.attributes.speed == 'medium' and trigger.to_state.attributes.speed == 'low' or 
            trigger.from_state.attributes.speed == 'low' and trigger.to_state.attributes.speed == 'high' }}
          sequence:
            - repeat:
                count: 2
                sequence:
                  - service: remote.send_command
                    data:
                      entity_id: remote.broadlink
                      command: !secret ir_fan_speed
        - conditions: >
            {{ trigger.from_state.attributes.speed == 'high' and trigger.to_state.attributes.speed == 'low' or 
            trigger.from_state.attributes.speed == 'medium' and trigger.to_state.attributes.speed == 'high' or 
            trigger.from_state.attributes.speed == 'low' and trigger.to_state.attributes.speed == 'medium' }}
          sequence:
            - service: remote.send_command
              data:
                entity_id: remote.broadlink
                command: !secret ir_fan_speed

  ###temp
  - alias: sovrum_anslut_speed_fix1_sync
    mode: queued
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('binary_sensor.gosund_fan', 'off') and not is_state('input_number.sovrum_anslut_speed', '0') }}
    action:
      - service: automation.turn_off
        target:
          entity_id: automation.sovrum_anslut_speed
      - service: input_number.set_value
        data:
          entity_id: input_number.sovrum_anslut_speed
          value: 0
      - service: automation.turn_on
        target:
          entity_id: automation.sovrum_anslut_speed

  - alias: sovrum_anslut_speed_fix2_restore
    mode: queued
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('binary_sensor.gosund_fan', 'on') and is_state('input_number.sovrum_anslut_speed', '0') }}
    action:
      - service: automation.turn_off
        target:
          entity_id: automation.sovrum_anslut_speed
      - service: input_number.set_value
        data:
          entity_id: input_number.sovrum_anslut_speed
          value: 33
      - service: automation.turn_on
        target:
          entity_id: automation.sovrum_anslut_speed
  ###

    ####################################################
    #                                                  #
    #                   AIR PURIFIER                   #
    #                                                  #
    ####################################################

  - alias: air_purifier_speed
    mode: queued
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_number.air_purifier_speed
    action:
      - choose:
        - conditions:
            - condition: template
              value_template: >
                {% set from_1 = ( trigger.from_state.state  | int > 0    and   trigger.from_state.state  | int <= 25  ) %}
                {% set to_2   = ( trigger.to_state.state    | int > 25   and   trigger.to_state.state    | int <= 50  ) %}
                {% set from_2 = ( trigger.from_state.state  | int > 25   and   trigger.from_state.state  | int <= 50  ) %}
                {% set to_3   = ( trigger.to_state.state    | int > 50   and   trigger.to_state.state    | int <= 75  ) %}
                {% set from_3 = ( trigger.from_state.state  | int > 50   and   trigger.from_state.state  | int <= 75  ) %}
                {% set to_4   = ( trigger.to_state.state    | int > 75   and   trigger.to_state.state    | int <= 100 ) %}

                {{ from_1 and to_2 or from_2 and to_3 or from_3 and to_4 }}
          sequence:
            - service: remote.send_command
              data:
                entity_id: remote.broadlink
                command: !secret ir_purifier_speed_up
        - conditions:
            - condition: template
              value_template: >
                {% set from_1 = ( trigger.from_state.state  | int > 0    and   trigger.from_state.state  | int <= 25  ) %}
                {% set to_3   = ( trigger.to_state.state    | int > 50   and   trigger.to_state.state    | int <= 75  ) %}

                {{ from_1 and to_3 }}
          sequence:
            - repeat:
                count: 2
                sequence:
                  - service: remote.send_command
                    data:
                      entity_id: remote.broadlink
                      command: !secret ir_purifier_speed_up
        - conditions:
            - condition: template
              value_template: >
                {% set from_2 = ( trigger.from_state.state  | int > 25   and   trigger.from_state.state  | int <= 50  ) %}
                {% set to_1   = ( trigger.to_state.state    | int > 0    and   trigger.to_state.state    | int <= 25  ) %}
                {% set from_3 = ( trigger.from_state.state  | int > 50   and   trigger.from_state.state  | int <= 75  ) %}
                {% set to_2   = ( trigger.to_state.state    | int > 25   and   trigger.to_state.state    | int <= 50  ) %}
                {% set from_4 = ( trigger.from_state.state  | int > 75   and   trigger.from_state.state  | int <= 100 ) %}
                {% set to_3   = ( trigger.to_state.state    | int > 50   and   trigger.to_state.state    | int <= 75  ) %}

                {{ from_2 and to_1 or from_3 and to_2 or from_4 and to_3 }}
          sequence:
            - service: remote.send_command
              data:
                entity_id: remote.broadlink
                command: !secret ir_purifier_speed_down
        - conditions:
            - condition: template
              value_template: >
                {% set from_3 = ( trigger.from_state.state  | int > 50   and   trigger.from_state.state  | int <= 75  ) %}
                {% set to_1   = ( trigger.to_state.state    | int > 0    and   trigger.to_state.state    | int <= 25  ) %}
                {% set from_4 = ( trigger.from_state.state  | int > 75   and   trigger.from_state.state  | int <= 100 ) %}
                {% set to_2   = ( trigger.to_state.state    | int > 25   and   trigger.to_state.state    | int <= 50  ) %}

                {{ from_3 and to_1 or from_4 and to_2 }}
          sequence:
            - repeat:
                count: 2
                sequence:
                  - service: remote.send_command
                    data:
                      entity_id: remote.broadlink
                      command: !secret ir_purifier_speed_down
        - conditions:
            - condition: template
              value_template: >
                {% set to_4   = ( trigger.to_state.state    | int > 75   and   trigger.to_state.state    | int <= 100 ) %}

                {{ to_4 }}
          sequence:
            - service: remote.send_command
              data:
                entity_id: remote.broadlink
                command: !secret ir_purifier_turbo
        - conditions:
            - condition: template
              value_template: >
                {% set from_4 = ( trigger.from_state.state  | int > 75   and   trigger.from_state.state  | int <= 100 ) %}
                {% set to_1   = ( trigger.to_state.state    | int > 0    and   trigger.to_state.state    | int <= 25  ) %}

                {{ from_4 and to_1 }}
          sequence:
            - repeat:
                count: 3
                sequence:
                  - service: remote.send_command
                    data:
                      entity_id: remote.broadlink
                      command: !secret ir_purifier_speed_down

  ###temp
  - alias: air_purifier_speed_fix1_sync
    mode: queued
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('binary_sensor.gosund_air_purifier', 'off') and not is_state('input_number.air_purifier_speed', '0') }}
    action:
      - service: automation.turn_off
        target:
          entity_id: automation.air_purifier_speed
      - service: input_number.set_value
        data:
          entity_id: input_number.air_purifier_speed
          value: 0
      - service: automation.turn_on
        target:
          entity_id: automation.air_purifier_speed

  - alias: air_purifier_speed_fix2_restore
    mode: queued
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('binary_sensor.gosund_air_purifier', 'on') and is_state('input_number.air_purifier_speed', '0') }}
    action:
      - service: automation.turn_off
        target:
          entity_id: automation.air_purifier_speed
      - service: input_number.air_purifier_speed
        data:
          entity_id: input_number.air_purifier_speed
          value: 25
      - service: automation.turn_on
        target:
          entity_id: automation.air_purifier_speed
  ###

    ####################################################
    #                                                  #
    #                      TABLET                      #
    #                                                  #
    ####################################################

  - alias: fullykiosk_close_popup
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.galaxy_tab_a_screensaver
        from: 'off'
        to: 'on'
        for:
          minutes: 10
    action:
      - service: browser_mod.close_popup
        data:
          deviceID: tablet

  - alias: fullykiosk_turn_on_screen
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.motion_hall
        from: 'off'
        to: 'on'
    action:
      - service: switch.turn_off
        entity_id: switch.galaxy_tab_a_screensaver
      - service: light.turn_on
        data:
          entity_id: light.galaxy_tab_a_screen
          brightness_pct: >
            {{ 90 if is_state('sun.sun', 'above_horizon') else 60 }}
      - service: input_boolean.turn_off
        data:
          entity_id: >
            {{ trigger.entity_id }}

  - alias: fullykiosk_turn_off_screen
    initial_state: true
    trigger:
      - platform: state
        entity_id: light.hall
        from: 'on'
        to: 'off'
    action:
      - service: switch.turn_on
        entity_id: switch.galaxy_tab_a_screensaver

    ####################################################
    #                                                  #
    #                     LOADING                      #
    #                                                  #
    ####################################################

  - alias: turn_off_loading_wheel
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          ['media_player.sony_bravia', 'media_player.samsung_tv_remote', 'switch.computer_imac', 
          'switch.playstation_5', 'fan.sovrum_anslut', 'fan.air_purifier']
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: >
            {{ trigger.entity_id | replace(trigger.entity_id.split('.')[0], 'input_boolean') }}

  - alias: turn_off_loading_wheel_failsafe
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          ['input_boolean.sony_bravia', 'input_boolean.samsung_tv_remote', 'input_boolean.computer_imac', 
          'input_boolean.playstation_5', 'input_boolean.sovrum_anslut', 'input_boolean.air_purifier']
        to: 'on'
        for:
          minutes: 1
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: >
            {{ trigger.entity_id }}

    ####################################################
    #                                                  #
    #                    HDMI / TV                     #
    #                                                  #
    ####################################################

  - alias: hdmi_input_select
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.hdmi
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.sony_bravia
          source: >
            {{ states(trigger.entity_id) }}

  - alias: hdmi2_input_select
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.hdmi2
    action:
      - service: media_player.select_source
        data:
          entity_id: media_player.samsung_tv_remote
          source: >
            {{ states(trigger.entity_id) }}

  - alias: turn_on_tv_failsafe
    initial_state: true
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: media_player
          service: turn_on
          service_data:
            entity_id: media_player.sony_bravia
    action:
      - service: media_player.turn_on
        data:
          entity_id: media_player.vardagsrum
      - delay:
          seconds: 1
      - service: remote.send_command
        data:
          entity_id: remote.vardagsrum
          command: menu

  - alias: turn_on_tv2_failsafe
    initial_state: true
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: media_player
          service: turn_on
          service_data:
            entity_id: media_player.samsung_tv_remote
    action:
      - service: media_player.turn_on
        data:
          entity_id: media_player.sovrum
      - delay:
          seconds: 1
      - service: remote.send_command
        data:
          entity_id: remote.sovrum
          command: menu

    ####################################################
    #                                                  #
    #                  LAUNDRY TIMER                   #
    #                                                  #
    ####################################################

  - alias: laundry_timer_reveal
    mode: restart
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.laundry_time_trigger
        to: 'on'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.laundry_timer_visibility
      - delay:
          hours: 4
      - service: input_boolean.turn_off
        entity_id: input_boolean.laundry_timer_visibility

  - alias: laundry_timer_alert
    initial_state: true
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.laundry
    action:
      - service: media_player.play_media
        data:
          entity_id: media_player.tablet
          media_content_id: /local/sound/timer.mp3
          media_content_type: music
      - delay:
          seconds: 2
      - service: tts.cloud_say
        data:
          entity_id: media_player.tablet
          message: >
            {{ ['Tvätten är färdig', 'Tvätten är klar', 'Dags att gå ner!'] | random }}
          language: sv-SE
      - service: notify.mobile_app_iphone
        data:
          message: >
            {{'\U0001F9FA'}} {{ ['Tvätten är färdig', 'Tvätten är klar', 'Dags att gå ner'] | random }}
      - service: shell_command.imac_notify_laundry
      - delay:
          seconds: 3

    ####################################################
    #                                                  #
    #                      VACUUM                      #
    #                                                  #
    ####################################################

  - alias: roborock_speed
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_select.roborock_speed
    action:
      - service: vacuum.set_fan_speed
        data:
          entity_id: vacuum.robot
          fan_speed: >
            {% if is_state(trigger.entity_id, 'Tyst') %} low
            {% elif is_state(trigger.entity_id, 'Standard') %} medium
            {% elif is_state(trigger.entity_id, 'Medium') %} high
            {% elif is_state(trigger.entity_id, 'Turbo') %} max
            {% elif is_state(trigger.entity_id, 'Av') %} off
            {% endif %}

  - alias: roborock_speed_update
    initial_state: true
    trigger:
      - platform: state
        entity_id: vacuum.robot
      - platform: homeassistant
        event: start
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.roborock_speed
          option: >
            {% set entity_id = 'vacuum.robot' %}
            {% if is_state_attr(entity_id, 'fan_speed', 'low') %} Tyst
            {% elif is_state_attr(entity_id, 'fan_speed', 'medium') %} Standard
            {% elif is_state_attr(entity_id, 'fan_speed', 'high') %} Medium
            {% elif is_state_attr(entity_id, 'fan_speed', 'max') %} Turbo
            {% elif is_state_attr(entity_id, 'fan_speed', 'off') %} Av
            {% endif %}

      ####################################################
      #                                                  #
      #                CONDITIONAL MEDIA                 #
      #                                                  #
      ####################################################

  - alias: conditional_media_playing
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id:
          ['media_player.vardagsrum', 'media_player.sovrum', 
          'media_player.spotify', 'media_player.google_nest_mini']
        to: playing
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.conditional_media
          option: >
            {{ trigger.to_state.name }}

  - alias: conditional_media_paused_idle
    initial_state: true
    mode: restart
    trigger:
      - platform: state
        entity_id:
          ['media_player.vardagsrum', 'media_player.sovrum', 
          'media_player.spotify', 'media_player.google_nest_mini']
        to:
          ['off', 'idle', 'standby']
      - platform: state
        entity_id:
          ['media_player.vardagsrum', 'media_player.sovrum', 
          'media_player.spotify', 'media_player.google_nest_mini']
        to: paused
        for:
          minutes: 10
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.conditional_media
          option: >
            {% set media_players = 
              [states.media_player.vardagsrum, states.media_player.sovrum, 
               states.media_player.spotify, states.media_player.google_nest_mini] %}
            {% if media_players | selectattr('state','eq','playing') | list | count == 0 %}
              {% if media_players | selectattr('state','eq','paused') | list | count == 0 %}
              Senast nedladdat
              {% else %}
              {{ media_players | selectattr('state','eq','paused') | map(attribute='name') | max }}
              {% endif %}
            {% else %}
            {{ media_players | selectattr('state','eq','playing') | map(attribute='name') | max }}
            {% endif %}

  - alias: conditional_media_all_off
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('media_player.vardagsrum', 'idle') and
          is_state('media_player.sovrum', 'idle') and
          is_state('media_player.spotify', 'idle') and
          is_state('media_player.google_nest_mini', 'off') 
          or
          is_state('media_player.sony_bravia', 'off') and
          is_state('media_player.samsung_tv_remote', 'off') and
          is_state('media_player.google_nest_mini', 'off') }}
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.conditional_media
          option: Senast nedladdat

  - alias: conditional_media_atv1_fix
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('media_player.vardagsrum', 'paused') and 
          is_state_attr('media_player.vardagsrum', 'media_title', 'No title') }}
        for:
          seconds: 5
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.conditional_media
          option: >
            {% set media_players = 
              [states.media_player.vardagsrum, states.media_player.spotify, 
               states.media_player.google_nest_mini] %}
            {% if media_players | selectattr('state','eq','playing') | list | count == 0 %}
              {% if media_players | selectattr('state','eq','paused') | list | count == 0 %}
              Senast nedladdat
              {% elif is_state('media_player.vardagsrum', 'paused') and 
              is_state_attr('media_player.vardagsrum', 'media_title', 'No title') or
              is_state('media_player.sovrum', 'paused') and 
              is_state_attr('media_player.sovrum', 'media_title', 'No title')
              %}
              Senast nedladdat
              {% else %}
              {{ media_players | selectattr('state','eq','paused') | map(attribute='name') | max }}
              {% endif %}
            {% else %}
            {{ media_players | selectattr('state','eq','playing') | map(attribute='name') | max }}
            {% endif %}

  - alias: conditional_media_atv2_fix
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ is_state('media_player.sovrum', 'paused') and 
          is_state_attr('media_player.sovrum', 'media_title', 'No title') }}
        for:
          seconds: 5
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.conditional_media
          option: >
            {% set media_players = 
              [states.media_player.vardagsrum, states.media_player.spotify, 
               states.media_player.google_nest_mini] %}
            {% if media_players | selectattr('state','eq','playing') | list | count == 0 %}
              {% if media_players | selectattr('state','eq','paused') | list | count == 0 %}
              Senast nedladdat
              {% elif is_state('media_player.vardagsrum', 'paused') and 
              is_state_attr('media_player.vardagsrum', 'media_title', 'No title') or
              is_state('media_player.sovrum', 'paused') and 
              is_state_attr('media_player.sovrum', 'media_title', 'No title')
              %}
              Senast nedladdat
              {% else %}
              {{ media_players | selectattr('state','eq','paused') | map(attribute='name') | max }}
              {% endif %}
            {% else %}
            {{ media_players | selectattr('state','eq','playing') | map(attribute='name') | max }}
            {% endif %}

    ####################################################
    #                                                  #
    #                     UI SOUND                     #
    #                                                  #
    ####################################################

  ## test
  - alias: ui_sound_popup
    initial_state: true
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: browser_mod
          service: popup
    condition:
      - condition: state
        entity_id: switch.galaxy_tab_a_screensaver
        state: 'off'
    action:
      - service: media_player.play_media
        data:
          entity_id: media_player.tablet
          media_content_id: /local/sound/popup.m4a
          media_content_type: music

    ####################################################
    #                                                  #
    #                       TEST                       #
    #                                                  #
    ####################################################

    # ...
